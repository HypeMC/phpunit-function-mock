name: CI

on:
    push:
    pull_request:
    workflow_dispatch:
    schedule:
        -   cron: '0 8 * * *'

jobs:
    php-cs-fixer:
        runs-on: ubuntu-latest
        name: Coding Standards
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'
                    tools: php-cs-fixer, cs2pr

            -   name: PHP Coding Standards Fixer (src)
                run: php-cs-fixer fix --dry-run --format checkstyle | cs2pr

            -   name: PHP Coding Standards Fixer (tests)
                run: php-cs-fixer fix --config .php-cs-fixer.test.dist.php --dry-run --format checkstyle | cs2pr

    phpstan:
        runs-on: ubuntu-latest
        name: Static Analysis
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'
                    tools: phpstan

            -   name: Install dependencies
                uses: ramsey/composer-install@v2
                with:
                    composer-options: '--prefer-dist'

            -   name: PHPStan
                run: phpstan analyse --no-progress

    phpunit:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.0', '8.1' ]
                phpunit: [ '8.5', '9.5' ]
                dependencies: [ 'highest', 'lowest' ]
        name: PHP ${{ matrix.php }} & PHPUnit ${{ matrix.phpunit }}${{ matrix.dependencies == 'lowest' && ' (lowest)' || '' }} Test
        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    ini-values: zend.exception_ignore_args=false

            -   name: Require PHPUnit version
                run: composer require --dev phpunit/phpunit:^${{ matrix.phpunit }} --no-update

            -   name: Install dependencies
                uses: ramsey/composer-install@v2
                with:
                    composer-options: '--prefer-dist'
                    dependency-versions: ${{ matrix.dependencies }}

            -   name: Run tests
                run: vendor/bin/phpunit -v --coverage-text --coverage-clover=coverage.xml

            -   name: Upload coverage to Codecov
                if: ${{ success() }}
                uses: codecov/codecov-action@v3
                with:
                    file: coverage.xml
                    flags: ${{ matrix.php }}
